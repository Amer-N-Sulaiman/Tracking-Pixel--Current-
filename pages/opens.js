import Head from 'next/head'
import Grid from '@mui/material/Grid'
import Button from '@mui/material/Button'

import {useState, useEffect} from 'react'

import TextField from '@mui/material/TextField'
import Typography from '@mui/material/Typography'
import { setCookie, getCookie, hasCookie } from 'cookies-next';

export default function Create(){

    const [tempTrackingId, setTempTrackingId] = useState('')
    const [tempPassword, setTempPassword] = useState('')

    const [error, setError] = useState(false);
    const [errorMessage, setErrorMessage] = useState('')
    const [wrongPassword, setWrongPassword] = useState(false)
    const [noOpens, setNoOpens] = useState(false)
    const [opensList, setOpensList] = useState([])

    useEffect(()=>{
        if (!hasCookie('trackingId')){
            return;
        }
        const localTempTrackingId = getCookie('trackingId')
        const localTempPassword = getCookie('password')

        const body = JSON.stringify({ 
            "user_id": localTempTrackingId,
            "password": localTempPassword 
        })
        const requestOptions = {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: body
        };
        fetch("https://amersulaimantrackingpixel.pythonanywhere.com/opens", requestOptions).then((response)=>{
            response.json().then((data)=>{
                console.log(data)
                if (data.e==='wrong id or password'){
                    setWrongPassword(true);
                    return;
                } else if (data.e==='no opens yet'){
                    setNoOpens(true);
                    return
                }
                else {
                    setOpensList(Object.values(data).reverse());
                    setWrongPassword(false);
                    setNoOpens(false);
                }
                
            })
            
        })
    }, []);


    function submitCreds(){
        const localTempTrackingId = tempTrackingId
        const localTempPassword = tempPassword

        const body = JSON.stringify({ 
            "user_id": localTempTrackingId,
            "password": localTempPassword 
        })
        const requestOptions = {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: body
        };
        fetch("https://amersulaimantrackingpixel.pythonanywhere.com/opens", requestOptions).then((response)=>{
            response.json().then((data)=>{
                
                if (data.e==='wrong id or password'){
                    setWrongPassword(true);
                    return;
                } else if (data.e==='no opens yet'){
                    setNoOpens(true);
                }
                else {
                    setOpensList(Object.values(data));
                    setWrongPassword(false);
                    setNoOpens(false);
                    console.log(Object.values(data).reverse())
                }
                setCookie('trackingId', localTempTrackingId)
                setCookie('password', localTempPassword)
                
            })
            
        })
    }

    function makeid(length) {
        let result = '';
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        const charactersLength = characters.length;
        let counter = 0;
        while (counter < length) {
          result += characters.charAt(Math.floor(Math.random() * charactersLength));
          counter += 1;
        }
        return result;
    }

    return(
        <>
             <Head>
                <title>Create A Tracking Pixel</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <Grid container direction="column" style={{marginTop: '70px', alignContent: "center"}}>
                    <Grid item xs={10} sm={6}>
                        <h1 style={{textAlign: 'center'}}>Watch Your Email Opens</h1>
                    </Grid>
                    <Grid item xs={10} sm={6} style={{textAlign: "center", marginTop: '30px'}}>    
                        <TextField id="standard-basic" value={tempTrackingId} onChange={(e)=>setTempTrackingId(e.target.value)} label="Tracking Id" variant="standard" style={{margin: '0 15px'}} />
                        <TextField id="standard-basic" value={tempPassword} onChange={(e)=>setTempPassword(e.target.value)} type="password" label="Password" variant="standard" style={{margin: '0 15px'}} /> 
                    </Grid>
                    <Grid item xs={10} sm={6} style={{textAlign: "center", marginTop: '10px'}}>    
                        <Button size="large" onClick={submitCreds} style={{margin: '10px'}}>Submit</Button>
                    </Grid>
                    
                    {hasCookie('trackingId') && opensList.length>0 && <div><Grid item xs={10} sm={6} style={{textAlign: "center", margin: '0 auto', marginTop: '30px'}}>
                        <h4>Showing Opens For the Following Tracking Id</h4>
                        <Typography sx={{fontSize: '14px'}} color="text.secondary">{getCookie('trackingId')}</Typography>
                        </Grid>
                        {opensList.map((open)=> {return(
                            <Grid key={makeid(4)} item xs={12} md={12} style={{margin: '0 auto', textAlign: "center"}}>
                                <Typography sx={{ mt: 4, mb: 2 }} variant="h6" component="div">
                                    <p key={open[1]}><b>{open[0]}</b> has opened your email at <b>{open[1]}</b></p>
                                </Typography>
                            </Grid>
                        ) 
                        
                        })}
                    </div>}
                
                    {}
                </Grid>
            </main>
        </>
       
    )
}